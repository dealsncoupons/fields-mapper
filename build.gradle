plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "io.github.kobylynskyi.graphql.codegen" version "4.1.6"
}

group = 'works.hop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '7.8.1'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
    implementation group: 'net.rakugakibox.spring.boot', name: 'orika-spring-boot-starter', version: '1.9.0'

    //graphql
    implementation group: 'com.graphql-java', name: 'graphql-java', version: '15.0'
    implementation "com.graphql-java:graphql-java-extended-scalars:15.0.0"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

jar {
    baseName "fields-mapper"
}

bootJar {
    mainClassName "works.hop.fields.mapper.FieldsMapperApplication"
}

// Automatically generate GraphQL code on project build:
compileJava.dependsOn 'graphqlCodegen'

// Add generated sources to your project source sets:
sourceSets.main.java.srcDir "$buildDir/generated"

graphqlCodegen {
    graphqlSchemas.includePattern = "schema\\.graphqls"
    outputDir = new File("$buildDir/generated")
    packageName = "works.hop.fields.mapper.domain"
    addGeneratedAnnotation = false
    customTypesMapping = [
            UUID: "java.util.UUID",
            Date: "java.time.LocalDate",
            DateTime: "java.time.LocalDateTime"
    ]
    modelNameSuffix = "TO"
}